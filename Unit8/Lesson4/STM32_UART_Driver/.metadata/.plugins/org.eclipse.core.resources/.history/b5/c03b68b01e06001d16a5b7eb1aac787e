/*
 * Includes.h
 *
 *  Created on: Jun 25, 2022
 *      Author: Mohamed Adel
 */

#ifndef INC_STM32F103C6_H_
#define INC_STM32F103C6_H_

//=======================================================================================
 // *******************Includes*************************************
#include "stdlib.h"
#include "stdint.h"
//=======================================================================================
 // *******************Base Addresses Of Memories *****************
#define Flash_memory_Base 				0x08000000UL
#define SRAM_Base						0x20000000UL
#define System_memory_Base				0x1FFFF000UL
#define NVIC_Base						0xE000E100UL
#define NVIC_ISER0						*(volatile uint32_t *)(NVIC_Base + 0x0)
#define NVIC_ISER1						*(volatile uint32_t *)(NVIC_Base + 0x4)
#define NVIC_ISER2						*(volatile uint32_t *)(NVIC_Base + 0x8)
#define NVIC_ICER0						*(volatile uint32_t *)(NVIC_Base + 0x80)
#define NVIC_ICER1						*(volatile uint32_t *)(NVIC_Base + 0x84)
#define NVIC_ICER2						*(volatile uint32_t *)(NVIC_Base + 0x88)


//=======================================================================================
 //*******************Base Addresses Of Peripherals****************

//Note : Structures are only applicable if the registers are sequientiel with 4 bytes

//GPIO_Base_Addresses
#define GPIOA_Base 						0x40010800UL
#define GPIOB_Base						0x40010C00UL
#define GPIOC_Base						0x40011000UL
#define GPIOD_Base						0x40011400UL
#define GPIOE_Base						0x40011800UL

//RCC_Base_Address
#define RCC_Base						0x40021000UL


//EXTI Base_Address
#define EXTI_Base						0x40010400UL

//AFIO_Base_Address
#define AFIO_Base						0x40010000UL
//=======================================================================================
 // *******************Peripherals Registers**************************
//Peripheral register : GPIO
typedef struct
{
	volatile uint32_t CRL ;
	volatile uint32_t CRH ;
	volatile uint32_t IDR ;
	volatile uint32_t ODR ;
	volatile uint32_t BSRR ;
	volatile uint32_t BRR ;
	volatile uint32_t LCKR ;
}GPIO_Typedef;
//Peripheral register : RCC
//***********************************
typedef struct
{
	volatile uint32_t CR ;
	volatile uint32_t CFGR ;
	volatile uint32_t CIR ;
	volatile uint32_t APB2RSTR ;
	volatile uint32_t APB1RSTR ;
	volatile uint32_t AHBENR ;
	volatile uint32_t APB2ENR ;
	volatile uint32_t APB1ENR ;
	volatile uint32_t BDCR ;
	volatile uint32_t CSR ;
	volatile uint32_t AHBSTR ;
	volatile uint32_t CFGR2 ;
}RCC_typedef;
//Peripheral register : EXTI
typedef struct
{
	volatile uint32_t IMR ;
	volatile uint32_t EMR ;
	volatile uint32_t RTSR ;
	volatile uint32_t FTSR ;
	volatile uint32_t SWIER ;
	volatile uint32_t PR ;
}EXTI_typedef;
//Peripheral register : AFIO
typedef struct
{
	volatile uint32_t EVCR ;
	volatile uint32_t MAPR ;
	volatile uint32_t EXTICR[4] ;
			 uint32_t Reserved ; //0x18
	volatile uint32_t MAPR2 ;

}AFIO_typedef;

//=======================================================================================
// *******************USART Peripheral****************************************
typedef struct
{
	volatile uint32_t SR ;
	volatile uint32_t DR ;
	volatile uint32_t BRR ;
	volatile uint32_t CR1 ;
	volatile uint32_t CR2 ;
	volatile uint32_t CR3 ;
	volatile uint32_t GTPR ;
}USART_typedef;
//=======================================================================================
// *******************Peripherals Instants****************************************
//GPIO_
#define GPIOA				((GPIO_Typedef*)GPIOA_Base)
#define GPIOB				((GPIO_Typedef*)GPIOB_Base)
#define GPIOC				((GPIO_Typedef*)GPIOC_Base)
#define GPIOD				((GPIO_Typedef*)GPIOD_Base)
#define GPIOE				((GPIO_Typedef*)GPIOE_Base)
//RCC_
#define RCC					((RCC_typedef*)RCC_Base)
//EXTI
#define EXTI				((EXTI_typedef*)EXTI_Base)
//AFIO
#define AFIO				((AFIO_typedef*)AFIO_Base)

//USART
#define USART1				((USART_typedef*)USART1_Base)
#define USART2				((USART_typedef*)USART2_Base)
#define USART3				((USART_typedef*)USART3_Base)


//=======================================================================================
// *******************Clock Enabling Macros****************************************
#define RCC_GPIOA_CLK_EN() (RCC->APB2ENR |= 1<<2)
#define RCC_GPIOB_CLK_EN() (RCC->APB2ENR |= 1<<3)
#define RCC_GPIOC_CLK_EN() (RCC->APB2ENR |= 1<<4)
#define RCC_GPIOD_CLK_EN() (RCC->APB2ENR |= 1<<5)
#define RCC_GPIOE_CLK_EN() (RCC->APB2ENR |= 1<<6)
#define AFIO_GPIO_CLK_EN() (RCC->APB2ENR |= 1<<0)

#define RCC_USART1_CLK_EN() (RCC->APB2ENR |= 1<<14)
#define RCC_USART2_CLK_EN() (RCC->APB1ENR |= 1<<17)
#define RCC_USART3_CLK_EN() (RCC->APB1ENR |= 1<<18)


#define RCC_USART1_CLK_Reset() (RCC->APB2RSTR |= 1<<14)
#define RCC_USART2_CLK_Reset() (RCC->APB1RSTR |= 1<<17)
#define RCC_USART3_CLK_Reset() (RCC->APB1RSTR |= 1<<18)
//=======================================================================================
// *******************IRQ NVIC Enable/Disable Macros****************************************
#define NVIC_IRQ6_EXTI0_Enable (NVIC_ISER0 |= 1<<6)
#define NVIC_IRQ7_EXTI1_Enable (NVIC_ISER0 |= 1<<7)
#define NVIC_IRQ8_EXTI2_Enable (NVIC_ISER0 |= 1<<8)
#define NVIC_IRQ9_EXTI3_Enable (NVIC_ISER0 |= 1<<9)
#define NVIC_IRQ10_EXTI4_Enable (NVIC_ISER0 |= 1<<10)
#define NVIC_IRQ23_EXTI5_9_Enable (NVIC_ISER0 |= 1<<23)
#define NVIC_IRQ40_EXTI10_15_Enable (NVIC_ISER1 |= 1<<8) //40-32 = 8

#define NVIC_IRQ6_EXTI0_Disable (NVIC_ICER0 |= 1<<6)
#define NVIC_IRQ7_EXTI1_Disable (NVIC_ICER0 |= 1<<7)
#define NVIC_IRQ8_EXTI2_Disable (NVIC_ICER0 |= 1<<8)
#define NVIC_IRQ9_EXTI3_Disable (NVIC_ICER0 |= 1<<9)
#define NVIC_IRQ10_EXTI4_Disable (NVIC_ICER0 |= 1<<10)
#define NVIC_IRQ23_EXTI5_9_Disable (NVIC_ICER0 |= 1<<23)
#define NVIC_IRQ40_EXTI10_15_Disable (NVIC_ICER1 |= 1<<8) //40-32 = 8

//=======================================================================================

// *******************IRQ USART Enable/Disable Macros****************************************
#define NVIC_IRQ37_USART_Enable (NVIC_ISER1 |= 1<<(USART1_IRQ-32)) //37-32
#define NVIC_IRQ38_USART_Enable (NVIC_ISER1 |= 1<<(USART2_IRQ-32)) //37-32
#define NVIC_IRQ39_USART_Enable (NVIC_ISER1 |= 1<<(USART3_IRQ-32)) //37-32

#define NVIC_IRQ37_USART_Disable (NVIC_ICER1 |= 1<<(USART1_IRQ-32)) //37-32
#define NVIC_IRQ38_USART_Disable (NVIC_ICER1 |= 1<<(USART2_IRQ-32)) //38-32
#define NVIC_IRQ39_USART_Disable (NVIC_ICER1 |= 1<<(USART3_IRQ-32)) //39-32
// *******************IVT****************************************
#define EXTI0_IRQ	6
#define EXTI1_IRQ	7
#define EXTI2_IRQ	8
#define EXTI3_IRQ	9
#define EXTI4_IRQ	10
#define EXTI5_IRQ	23
#define EXTI6_IRQ	23
#define EXTI7_IRQ	23
#define EXTI8_IRQ	23
#define EXTI9_IRQ	23
#define EXTI10_IRQ	40
#define EXTI11_IRQ	40
#define EXTI12_IRQ	40
#define EXTI13_IRQ	40
#define EXTI14_IRQ	40
#define EXTI15_IRQ	40

#define USART1_IRQ 37
#define USART2_IRQ 38
#define USART3_IRQ 39

//=======================================================================================

//======================================================================================
// *******************USART****************************************
#define USART1_Base					0x40013800UL
#define USART2_Base					0x40004400UL
#define USART3_Base					0x40004800UL



#endif /* INC_STM32F103C6_H_ */
