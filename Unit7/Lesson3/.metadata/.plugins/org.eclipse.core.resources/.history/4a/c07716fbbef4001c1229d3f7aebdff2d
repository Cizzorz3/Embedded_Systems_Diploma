/*
 * Includes.h
 *
 *  Created on: Jun 25, 2022
 *      Author: Mohamed Adel
 */

#ifndef INCLUDES_H_
#define INCLUDES_H_

//=======================================================================================
 // *******************Includes*************************************
#include "stdlib.h"
//=======================================================================================
 // *******************Base Addresses Of Memories *****************
#define Flash_memory_Base 				0x08000000UL
#define SRAM_Base						0x20000000UL
#define System_memory_Base				0x1FFFF000UL
//=======================================================================================
 //*******************Base Addresses Of Peripherals****************

//GPIO_Base_Addresses
#define GPIOA_Base 						0x40010800UL
#define GPIOB_Base						0x40010C00UL
#define GPIOC_Base						0x40011000UL
#define GPIOD_Base						0x40011400UL
#define GPIOE_Base						0x40011800UL

//RCC_Base_Address
#define RCC_Base						0x40021000UL


//EXTI Base_Address
#define EXTI_Base						0x40010400UL

//AFIO_Base_Address
#define AFIO_Base						0x40010000UL
//=======================================================================================
 // *******************Peripherals Registers**************************
//Peripheral register : GPIO
typedef struct
{
	volatile uint32_t CRL ;
	volatile uint32_t CRH ;
	volatile uint32_t IDR ;
	volatile uint32_t ODR ;
	volatile uint32_t BSRR ;
	volatile uint32_t BRR ;
	volatile uint32_t LCKR ;
}GPIO_Typedef;
//Peripheral register : RCC
//***********************************
typedef struct
{
	volatile uint32_t CR ;
	volatile uint32_t CFGR ;
	volatile uint32_t CIR ;
	volatile uint32_t APB2RSTR ;
	volatile uint32_t APB1RSTR ;
	volatile uint32_t AHBENR ;
	volatile uint32_t APB2ENR ;
	volatile uint32_t APB1ENR ;
	volatile uint32_t BDCR ;
	volatile uint32_t CSR ;
	volatile uint32_t AHBSTR ;
	volatile uint32_t CFGR2 ;
}RCC_typedef;
//Peripheral register : EXTI
typedef struct
{
	volatile uint32_t IMR ;
	volatile uint32_t EMR ;
	volatile uint32_t RTSR ;
	volatile uint32_t FTSR ;
	volatile uint32_t SWIER ;
	volatile uint32_t PR ;
}EXTI_typedef;
//Peripheral register : AFIO
typedef struct
{
	volatile uint32_t EVCR ;
	volatile uint32_t MAPR ;
	volatile uint32_t EXTICR1 ;
	volatile uint32_t EXTICR2 ;
	volatile uint32_t EXTICR3 ;
	volatile uint32_t EXTICR4 ;
			 uint32_t Reserved ; //0x18
	volatile uint32_t MAPR2 ;

}AFIO_typedef;
//=======================================================================================

// *******************Peripherals Instants****************************************
//GPIO_
#define GPIOA				((GPIO_Typedef*)GPIOA_Base)
#define GPIOB				((GPIO_Typedef*)GPIOB_Base)
#define GPIOC				((GPIO_Typedef*)GPIOC_Base)
#define GPIOD				((GPIO_Typedef*)GPIOD_Base)
#define GPIOE				((GPIO_Typedef*)GPIOE_Base)
//RCC_
#define RCC					((RCC_typedef*)RCC_Base)
//EXTI
#define EXTI				((EXTI_typedef*)EXTI_Base)
//AFIO
#define AFIO				((AFIO_typedef*)AFIO_Base)
//=======================================================================================
// *******************Clock Enabling Macros****************************************
#define RCC_GPIOA_CLK_EN() (RCC->APB2ENR |= 1<<2)
#define RCC_GPIOB_CLK_EN() (RCC->APB2ENR |= 1<<3)
#define RCC_GPIOC_CLK_EN() (RCC->APB2ENR |= 1<<4)
#define RCC_GPIOD_CLK_EN() (RCC->APB2ENR |= 1<<5)
#define RCC_GPIOE_CLK_EN() (RCC->APB2ENR |= 1<<6)
#define AFIO_GPIO_CLK_EN() (RCC->APB2ENR |= 1<<0)
//=======================================================================================

#endif /* INCLUDES_H_ */
